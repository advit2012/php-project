pipeline {
    agent any
    stages {
        stage('Git Clone') {
            steps {
                git url: 'https://github.com/advit2012/php-project/', branch: 'master'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // Use a unique tag, e.g., based on commit hash or build number
                    def imageTag = "advit2012/akshatnewimg2july:${env.BUILD_NUMBER}"
                    sh "docker build -t ${imageTag} ."
                    sh 'docker images'
                }
            }
        }
        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'advit2012', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
                    sh "echo $PASS | docker login -u $USER --password-stdin"
                    sh "docker push advit2012/akshatnewimg2july:${env.BUILD_NUMBER}"
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    def imageTag = "advit2012/akshatnewimg2july:${env.BUILD_NUMBER}"
                    def dockerrm = 'sudo docker rm -f My-first-containe2211 || true'
                    def dockerCmd = "sudo docker run -itd --name My-first-containe2211 -p 8083:80 ${imageTag}"
                    
                    sshagent(['sshkeypair']) {
                        // Remove existing container if exists
                        sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.35.49 ${dockerrm}"
                        // Pull the latest Docker image
                        sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.35.49 docker pull ${imageTag}"
                        // Run the new container
                        sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.35.49 ${dockerCmd}"
                    }
                }
            }
        }
    }
}
